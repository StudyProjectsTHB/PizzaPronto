package de.thb.dim.pizzaProntoTest;import static org.junit.jupiter.api.Assertions.assertEquals;import static org.junit.jupiter.api.Assertions.assertTrue;import static org.junit.jupiter.api.Assertions.fail;import java.lang.reflect.Modifier;import java.lang.reflect.Method;import de.thb.dim.pizzaPronto.valueObjects.IObserver;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.DisplayName;import org.junit.jupiter.api.Test;/** *  * @author Gabriele Schmidt * @version 1.0 8.06.2023 */public class JUnitTestIObserver {			private static Class<IObserver> myIObserver;	private static int modifiersIObserver; 			@BeforeEach	public void initEach() {		myIObserver = IObserver.class;		modifiersIObserver= myIObserver.getModifiers();	}	@Test	@DisplayName("test IObserver is Interface")	public void testIObserverisInterface() {			assertTrue( Modifier.isInterface(modifiersIObserver),"IObserver is Interface");	}		@Test	@DisplayName("test IObserver has 1 method")	public void testIObserverMethods() {		Method[] methods = myIObserver.getDeclaredMethods();		assertEquals(1,methods.length);	}		@Test	@DisplayName("test IObserver has method update")	public void testIObserverUpdate() {		Method method;		try {			method = myIObserver.getMethod("update",de.thb.dim.pizzaPronto.businessObjects.IObservable.class,String.class);			} catch (NoSuchMethodException | SecurityException e) {			fail("No such method " + e.getMessage());		}	}}